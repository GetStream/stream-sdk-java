/*
 * ========================================================================
 * WARNING: GENERATED CODE -- DO NOT EDIT!
 * ========================================================================
 *
 * This file was auto-generated by GetStream internal OpenAPI
 *
 * Any modifications to this file will be lost upon regeneration.
 * To make changes, please modify the source templates and regenerate.
 *
 * ========================================================================
 */
package io.getstream.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.getstream.models.framework.RateLimit;
import java.util.Optional;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import io.getstream.annotations.Query;

@lombok.Data
@lombok.Builder
@lombok.NoArgsConstructor@lombok.AllArgsConstructor

public class UpsertModerationRuleRequest {
    
    @JsonProperty("name")
    private String name;
    
    @JsonProperty("rule_type")
    private String ruleType;
    
    @JsonProperty("action")
    private RuleBuilderAction action;
    
    @Nullable
    @JsonProperty("cooldown_period")
    private String cooldownPeriod;
    
    @Nullable
    @JsonProperty("description")
    private String description;
    
    @Nullable
    @JsonProperty("enabled")
    private Boolean enabled;
    
    @Nullable
    @JsonProperty("logic")
    private String logic;
    
    @Nullable
    @JsonProperty("team")
    private String team;
    
    @Nullable
    @JsonProperty("conditions")
    private List<RuleBuilderCondition> conditions;
    
    @Nullable
    @JsonProperty("config_keys")
    private List<String> configKeys;
    
    @Nullable
    @JsonProperty("groups")
    private List<RuleBuilderConditionGroup> groups;

}
